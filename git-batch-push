#!/usr/bin/env bash

script_name="$(basename "${0}")"

get_git_branch(){
    git branch | grep \* | cut -d ' ' -f2
}

exec_command(){
    "${@}" 2>&1 | tee "${stdouterr_file}"
}

conf_file="./${script_name}".conf

if [[ ! -f "${conf_file}" ]]
then
	printf '%s not a file.\n' "${conf_file}"
	exit 1
fi

. "${conf_file}"

stderr_file=$(mktemp --suffix="_${script_name}.error")

cd "${base_dir}"

for target in ${folders}
do

    if [[ ! -d "${target}" ]]
    then
        printf 'Skipping %s: not a directory.\n' "${target}"
        continue
    fi

    printf '\n%s\n\n' "${target}"

    stdout_file="${log_dir}/${script_name}_${target}_${comment}"
    stdouterr_file="${log_dir}/${script_name}_${target}_`date +'%Y%m%d%H%M%S'`"

    if ! touch "${stdouterr_file}"
    then
        exit 1
    fi

    cd "${target}"

    current_branch=$(get_git_branch)

    if [[ ${current_branch} = "master" ]]
    then
        exec_command git push
    else
        printf '%s not in master branch.\n' "${target}" >&2
    fi

	cd "${base_dir}"

    printf '\n%s\n' '------------------------------------------------'
done
