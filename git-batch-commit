#!/usr/bin/env bash

# set -x

script_name="$(basename "${0}")"

get_git_branch(){
    git branch | grep \* | cut -d ' ' -f2
}

exec_command(){
    "${@}" > "${stdout_file}" 2>"${stderr_file}"
    if [[ $(find "${stderr_file}" -size +1c | wc -l) -gt 0 ]]
    then
        printf '\n%s\n\n' "${target}"
        printf '\n%s\n' '------------------------------------------------'
        cat "${stderr_file}"
        return 1
    fi
    : > "${stderr_file}"
    return 0
}

conf_file="./${script_name}".conf

if [[ ! -f "${conf_file}" ]]
then
	printf '%s not a file.\n' "${conf_file}"
	exit 1
fi

. "${conf_file}"

stderr_file=$(mktemp --suffix="_${script_name}.error")

if [[ -n "$1" ]]
then
    comment="${1}"
else
    comment=$(date +'%Y%m%d%H%M%S')
fi

cd "${base_dir}"

for target in ${folders}
do

    if [[ ! -d "${target}" ]]
    then
        printf 'Skipping %s: not a directory.\n' "${target}"
        continue
    fi

    stdout_file="${log_dir}/${script_name}_${target}_${comment}"

    if ! touch "${stdout_file}"
    then
        exit 1
    fi

    cd "${target}"

    current_branch=$(get_git_branch)

    if [[ ${current_branch} != "master" ]]
    then
        printf '\033[0;31m%s not in master branch.\n\033[0m' "${target}" >&2
        exit 1
    fi

    exec_command git add -A \
        && exec_command git commit -am "${comment}"

	cd "${base_dir}"

done
