#!/usr/bin/env bash

# Restore tmux session after reboot
# https://superuser.com/a/615716

# Save and restore the state of tmux sessions and windows.
#
# TODO: persist and restore the state & position of panes.
set -e
# set -x

dump() {
  local d=$'\t'
  tmux list-windows -a -F "#{automatic-rename}${d}#S${d}#W${d}#{pane_current_path}"
}

save() {
  dump > ~/.tmux-session
}

terminal_size() {
  stty size 2>/dev/null | awk '{ printf "-x%d -y%d", $2, $1 }'
}

session_exists() {
  tmux has-session -t "$1" 2>/dev/null
}

add_window() {
  tmux new-window -d -t "$1:" -n "$2" -c "$3"
}

new_session() {
  cd "$3" &&
  tmux new-session -d -s "$1" -n "$2" $4
}

restore() {
  tmux start-server
  local count=0
  local window_number
  local dimensions="$(terminal_size)"

  while IFS=$'\t' read automatic_rename session_name window_name dir; do
    if [[ -d "$dir" && $window_name != "log" && $window_name != "man" ]]; then
      if session_exists "$session_name"; then
        add_window "$session_name" "$window_name" "$dir"
        window_number=$(( window_number + 1 ))
      else
        new_session "$session_name" "$window_name" "$dir" "$dimensions"
        count=$(( count + 1 ))
        window_number=0
      fi
      [[ ${automatic_rename} -gt 0 ]] && \
          tmux setw -t ${window_number} automatic-rename on
    fi
  done < ~/.tmux-session

  echo "restored $count session(s)"
}

case "$1" in
save | restore )
  $1
  ;;
* )
  echo "valid commands: save, restore" >&2
  exit 1
esac
