#!/usr/bin/env bash

# Restore tmux session after reboot
# https://superuser.com/a/615716

# Save and restore the state of tmux sessions and windows.
#
# TODO: persist and restore position of panes.
set -e
set -x

dump() {
  local d=$'\t'
  tmux list-panes -a -F "\
#{automatic-rename}${d}#S${d}#W${d}\
#{pane_at_top}#{pane_at_left}#{pane_at_bottom}#{pane_at_right}\
${d}#{pane_current_path}"
}

save() {
  echo "WARNING! Script in development. Session saved to “~/.tmux-session.test”."
  dump > ~/.tmux-session.test # TODO test
}

terminal_size() {
  stty size 2>/dev/null | awk '{ printf "-x%d -y%d", $2, $1 }'
}

session_exists() {
  tmux has-session -t "${1}" 2>/dev/null
}

automatic_rename() {
  if [[ ${1} -eq 1 ]]; then
    tmux setw -t ${2} automatic-rename on
  fi
}

restore() {
  tmux start-server
  local count=0
  local window_number
  local dimensions="$(terminal_size)"

  while IFS=$'\t' read automatic_rename session_name window_name facts path; do
    [[ -d "${path}" ]] || continue
    if session_exists "${session_name}"; then
      if [[ "${current_window}" == "${window_name}" && "${facts}" != 1111 ]]; then
        tmux split-window -c "${path}"
      else
        tmux new-window -t "${session_name}:" -n "${window_name}" -c "${path}"
        current_window="${window_name}"
        window_number=$(( window_number + 1 ))
        automatic_rename ${automatic_rename} ${window_number}
      fi
    else
      tmux new-session -d -c "${path}" -s "${session_name}" -n "${window_name}" ${dimensions}
      count=$(( count + 1 ))
      window_number=0
      automatic_rename ${automatic_rename} ${window_number}
    fi
  done < ~/.tmux-session.test # TODO test

  echo "Restored ${count} session(s)."
}

case "${1}" in
save | restore )
  ${1}
  ;;
* )
  echo "Valid commands: save, restore." >&2
  exit 1
esac
